---
title: Upgrading Cloud Service Broker for GCP
owner: Cloud Service Broker
---

This topic describes how to upgrade <%= vars.product_full %>.

## <a id="upgrade-to-1-2"></a> Upgrading from v1.1 to v1.2

### <a id="updating-instances"></a> Update instances to include the proper value for `authorized_network_id`

Make the following changes to existing instances before upgrading.

The old property `authorized_network` was removed, and you have to use `authorized_network_id` instead.
If you have any instances created passing an explicit value for authorized_network`, different from the
one specified in <%= vars.ops_manager %>, you must update them to provide the VPC ID through `authorized_network_id` instead.

To that effect, you can run the following command

`cf update-service SERVICE-INSTANCE-NAME -c '{"authorized_network_id": "VPC-ID"}'`

for each instance that has a value that differs from <%= vars.ops_manager %> or plan configuration.

See [Set `authorized_network_id` for the MySQL service](gcp-mysql-authorized-network-id) if you have the `authorized_network` property  specified in a custom plan.

### <a id="gcp-changing-custom-plans"></a> Changing custom plans

Make the following changes to existing custom plans before upgrading.

#### <a id="gcp-mysql-set-tier"></a> Set `tier` for the MySQL service

If you have custom plans already configured for MySQL, you must change the configuration.
This is because the old property `cores` was removed, and you have to use `tier` instead to define
compute and memory capacity.

To ensure that no unintended changes happen to your existing instances, add the `tier` property.
For example:

```json
  {
    "name": "my-custom-plan",
    "id": "dd448d6e-1d71-11ed-9974-77a0c9ef0141",
    "description": "Custom plan",
    "tier": "db-n1-standard-2",
    "storage_gb": 10,
    "mysql_version": "MYSQL_5_7"
  }
```

For more information about the machine types, see the
[GCP documentation](https://cloud.google.com/sql/docs/mysql/instance-settings).

#### <a id="gcp-mysql-authorized-network-id"></a> Set `authorized_network_id` for the MySQL service

If you have custom plans already configured for MySQL, and you included the `authorized_network` property,
you must change the configuration.

This is because the old property `authorized_network` was removed, and you have to use `authorized_network_id` instead
to define the id of the Google Compute Engine network to which the instance is connected.

To ensure that no unintended changes happen to your existing instances, add the `authorized_network_id` property.
For example:

```json
  {
    "name": "my-custom-plan",
    "id": "dd448d6e-1d71-11ed-9974-77a0c9ef0141",
    "description": "Custom plan",
    "authorized_network_id": "projects/GCP_PROJECT/global/networks/VPC_NAME",
    "storage_gb": 10,
    "mysql_version": "MYSQL_5_7"
  }
```

## <a id="upgrade-to-1-1"></a> Upgrading from v1.0 to v1.1

If you have Redis or Dataproc instances created with previous versions of the <%= vars.product_short %>
without explicitly passing a value for `instance_id` for Redis or `name` for Dataproc, you must
update those instances before installing this version.

For Redis instances, set `instance_id` by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"instance_id":"CURRENT-NAME-FROM-GCP-CONSOLE"}'
```

For Dataproc instances, set `name` by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"name":"CURRENT-NAME-FROM-GCP-CONSOLE"}'
```

## <a id="upgrade-to-1-0"></a> Upgrading from beta to v1.0

Because of differences in the PostgreSQL service offering, it is not possible to upgrade beta
instances to v1.0.
You must delete all previously created service instances before upgrading <%= vars.product_short %>
from v0.2 to v1.0.

To retain beta instances in the IaaS, remove them from Cloud Foundry.
<%= vars.product_short %> no longer manages these instances.

To remove the instances from Cloud Foundry, run the command:

```console
cf purge-service-instance
```

## <a id="procedure"></a> Upgrade procedure

To upgrade the <%= vars.product_short %> to a later version:

1. Download the new version of <%= vars.product_short %> from
[<%= vars.product_network %>](https://network.pivotal.io/products/cloud-service-broker-gcp/).

1. Follow the procedure in [Installing with GCP](installing-with-gcp.html).

1. Make all the changes required for the new version as specified in this page.

1. If you are upgrading to a version later than v1.0, service instances might need to be upgraded.
Before installing the new version, see
[Upgrade All Service Instances Config](installing-with-gcp.html#upgrade-all-config).
