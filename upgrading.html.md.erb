---
title: Upgrading Cloud Service Broker for GCP
owner: Cloud Service Broker
---

This topic tells you how to upgrade <%= vars.product_full %>.

## <a id="upgrade-to-1-1"></a> Upgrading from v1.0 to v1.1

If you have Redis or Dataproc instances created with previous versions of the <%= vars.product_short %>
without explicitly passing a value for `instance_id` for Redis or `name` for Dataproc, you must
update those instances before installing this version.

>Review the `deploy-all` errand logs in the change log to verify
   that no errors occurred when upgrading instances.

## <a id="pre-upgrade"></a> Pre-Upgrade procedure

<p class="note important">
<span class="note__title">Important</span> Before upgrading, it is crucial to perform the checks suggested in this section.</span>
  Not doing so could cause the upgrade process to fail and leave the broker unable to manage your instances.
</p>

* **Check if services are up-to-date**
  Execute the command:

   ```shell
   cf upgrade-all-services BROKER-NAME -check-up-to-date
   ```

  This command checks whether all services provided by the specified broker are up-to-date.
  An instance is considered not up-to-date if it is pending upgrade, or if it is an orphaned service instance.

* **Check for orphaned service instances**
  For greater granularity, you can specifically check only orphan service instances by running this command:

   ```shell
   cf upgrade-all-services BROKER-NAME -check-deactivated-plans
   ```

  This checks for any service instances still using plans that have been deactivated.
  More details can be found in the [Managing orphaned service instances documentation](./managing_orphaned_service_instances.html.md.erb).

## <a id="procedure"></a> Upgrade procedure

To upgrade <%= vars.product_short %>:

1. Before you stage the new tile version, [verify that all service instances are
   up to date](#upgrade-instances).

2. Download the new version of <%= vars.product_short %> from [<%=
   vars.product_network
   %>](https://network.tanzu.vmware.com/products/cloud-service-broker-gcp/).

3. Stage and configure the tile by following the instructions in [Installing
    with GCP](installing-with-gcp.html.md.erb).

4. Make all the changes described in [Upgrading to v1.2.1](#upgrading-specifics).

5. Verify that your configuration complies with the [important notes about
   upgrading service instances](#upgrade-notes), especially regarding upgrading
   all instances of config, plans, and beta offerings.

6. Go to the <%= vars.ops_manager %> Installation Dashboard.

7. Click **Review Pending Changes** and then click **Apply Changes**.

8. Review the `deploy-all` errand logs for any errors created because of the
   upgrade instances task.

## <a id="upgrade-instances"></a> Verify that service instances are up to date before upgrading the tile

Service instances that haven't been upgraded with one version of the tile might
not be upgradable by a later version. So verify that there are no
service instances pending upgrade before staging the new version of the tile.

You can see whether there are instances with a pending upgrade by reviewing the
`deploy-all` errand log for <%= vars.product_short %>. Alternatively, you can
[verify all instances are up to date with the CLI plug-in](#checking-cli-plugin)
and the `-dry-run` flag, which outputs the list of instances pending upgrade.

If you find instances that are pending upgrade, follow the upgrading
instructions for your current version.

### <a id="upgrade-notes"></a> Important notes about upgrading service instances

Before you start upgrading service instances, see the following notes:

- **Select the Upgrade all services check box:**

  If the **Upgrade all services** check box is not selected, service instances
  are not upgraded during installation. These instances become unmanageable by
  the broker. Any operations on that instance, such as update, bind, unbind, or
  delete, are blocked until you run the upgrade task. You can run the upgrade
  task at any time before upgrading the product to a later version. For
  information about how to configure this task, see [Upgrade All Service
  Instances configuration](installing-with-gcp.html.md.erb#upgrade-all-config).
  Alternatively, run the upgrade at a later stage using the [CLI
  plug-in](#upgrading-cli-plugin).

- **Select the Enable Beta offerings check box:**

  If the **Enable Beta offerings** check box is not selected when applying
  changes, instances from those service offerings are not upgraded. These
  instances become unmanageable by the broker. Verify that the **Enable Beta
  offerings** check box is selected if you have instances from those offerings
  that you intend to keep updated.

- **Deleting custom plans:**

  If you delete custom plans before upgrading all instances, instances from
  these plans are not upgraded. These instances become unmanageable by the
  broker. Delete plans after upgrading all instances, or see [Release Notes for
  Cloud Service Broker for GCP](release-notes.html.md.erb) and [Upgrading to
  v1.2.1](#upgrading-specifics) to prevent conflicting upgrades.

- **Only upgrade the tile after all service instances are up to date:**

  You can run the upgrade all instances task as many times as needed. If
  you prefer, run the upgrade all instances task by using the cf CLI
  instead of, or in addition to, running it through the tile. Failure to upgrade
  one or more instances does not cause the tile installation to fail. Review the
  `deploy all` errand logs to verify that all instances have upgraded.

### <a id="checking-cli-plugin"></a> Verify that all instances are up to date with the CLI plug-in

To verify that no instances are pending upgrade:

1. Install the [cf CLI UpgradeAllServices
   plugin](https://plugins.cloudfoundry.org/#UpgradeAllServices) on Cloud Foundry.
1. Follow the instructions in the **Usage** section of the `README` in the
   [upgrade-all-services-cli-plugin](https://github.com/cloudfoundry/upgrade-all-services-cli-plugin#usage)
   GitHub repository to perform a `check-up-to-date` command.

   `check-up-to-date` example:

   ```shell
   cf upgrade-all-services BROKER-NAME -check-up-to-date
   ```

   These command provide a list, from enabled plans, of instances that are pending upgrades and a list of
   orphaned service instances that belong to deactivated plans.
   Manage all the instances listed before attempting a tile upgrade.

### <a id="upgrading-cli-plugin"></a> Upgrade instances through the CLI plug-in

To run the cf CLI plug-in:

1. Install the [cf CLI UpgradeAllServices
   plugin](https://plugins.cloudfoundry.org/#UpgradeAllServices) on Cloud Foundry.
1. To run the upgrade, follow the instructions in the **Usage** section of the
   `README` in the
   [upgrade-all-services-cli-plugin](https://github.com/cloudfoundry/upgrade-all-services-cli-plugin#usage)
   GitHub repository.

   For example:

   ```shell
   cf upgrade-all-services BROKER-NAME
   ```

Run the CLI plug-in with the `-dry-run` flag before applying the service
instance upgrade to find out which instances are pending upgrade.

## <a id="upgrading-specifics"></a> Upgrading to v1.2.1

### <a id="gcp-mysql"></a> Google MySQL

The following sections describe changes for the Google MySQL service.

#### <a id="retiring-beta-instances"></a> Retiring beta instances

The Google MySQL service is now generally available. The service instances
provisioned by the beta version of the Google MySQL service are no longer
supported. You must remove the service instances from the supervision of <%=
vars.product_short %>.

If all MySQL instances are not removed, the installation fails with the
following error message:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"instance_id":"CURRENT-NAME-FROM-GCP-CONSOLE"}'
```

For Dataproc instances, set `name` by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"name":"CURRENT-NAME-FROM-GCP-CONSOLE"}'
```

## <a id="upgrade-to-1-0"></a> Upgrading from beta to v1.0

Because of differences in the PostgreSQL service offering, it is not possible to upgrade beta
instances to v1.0.
You must delete all previously created service instances before upgrading <%= vars.product_short %>
from v0.2 to v1.0.

To retain beta instances in the IaaS, remove them from Cloud Foundry.
<%= vars.product_short %> no longer manages these instances.

To remove the instances from Cloud Foundry, run the command:

```console
cf purge-service-instance
```

## <a id="procedure"></a> Upgrade procedure

To upgrade the <%= vars.product_short %> to a later version:

1. Download the new version of <%= vars.product_short %> from
[<%= vars.product_network %>](https://network.tanzu.vmware.com/products/cloud-service-broker-gcp/).

1. Follow the procedure in [Installing with GCP](installing-with-gcp.html).

1. If you are upgrading to a version later than v1.0, service instances might need to be upgraded.
Before installing the new version, see
[Upgrade All Service Instances Config](installing-with-gcp.html#upgrade-all-config).
