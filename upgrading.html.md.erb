---
title: Upgrading Cloud Service Broker for GCP
owner: Cloud Service Broker
---

This topic describes how to upgrade <%= vars.product_full %>.
The following sections have information about upgrading to v1.2.0.

## <a id="gcp-mysql"></a> GCP for MySQL

The following sections describe changes for GCP for MySQL.

### <a id="updating-instances"></a> Update instances to include the proper value for `authorized_network_id`

The old property `authorized_network` was removed.
Before upgrading, ensure that your instances use `authorized_network_id` instead.
Any instances that pass an explicit value for `authorized_network` are not manageable after the
upgrade.

If you have the `authorized_network` property specified in a custom plan,
see [Set `authorized_network_id` for the MySQL service](#gcp-mysql-auth-ntwrk-id).

### <a id="gcp-mysql-chng-cust-plns"></a> Changing custom plans

Make the following changes to existing custom plans before upgrading.

#### <a id="gcp-mysql-plans-set-tier"></a> Set `tier` for the MySQL service

If you have custom plans already configured for MySQL, you must change the configuration.
This is because the old property `cores` was removed, and you have to use `tier` instead to define
compute and memory capacity.

To ensure that no unintended changes happen to your existing instances, add the `tier` property.
For example:

```json
  {
    "name": "my-custom-plan",
    "id": "dd448d6e-1d71-11ed-9974-77a0c9ef0141",
    "description": "Custom plan",
    "tier": "db-n1-standard-2",
    "storage_gb": 10,
    "mysql_version": "MYSQL_8_0"
  }
```

For more information about the machine types, see the
[Google Cloud documentation](https://cloud.google.com/sql/docs/mysql/instance-settings).

#### <a id="gcp-mysql-auth-ntwrk-id"></a> Set `authorized_network_id` for the MySQL service

If you have custom plans already configured for MySQL, and you included the `authorized_network`
property, you must change the configuration.

This is because the old property `authorized_network` was removed, and you have to use
`authorized_network_id` instead to define the ID of the Google Compute Engine network to which the
instance is connected.

To ensure that no unintended changes happen to your existing instances, add the `authorized_network_id`
property. For example:

```json
  {
    "name": "my-custom-plan",
    "id": "dd448d6e-1d71-11ed-9974-77a0c9ef0141",
    "description": "Custom plan",
    "authorized_network_id": "projects/GCP_PROJECT/global/networks/VPC_NAME",
    "storage_gb": 10,
    "mysql_version": "MYSQL_5_7"
  }
```

## <a id="gcp-storage-bucket"></a> Google Cloud Storage Bucket

### <a id="gcp-strg-bckt-old-plans"></a> Restoring brokerpak-provided plans

From this version onwards, Google Cloud Storage Bucket plans are no longer provided with the brokerpak.
If you have instances that you want to maintain, you must add previously provided plans through the
tile. For more information, see
[Add previously provided pre-configured plans](reference/gcp-storage.html.md.erb#old-plans).

<p class="note caution">
  <strong>Caution:</strong>
  Keeping old instances is discouraged because the previous version of the service was a beta version,
  and therefore not suitable for production.
  If you choose to update the instances, there are breaking changes that can affect the configuration
  of the plans you must define.
</p>

This version adds breaking changes that force the recreation of the bucket if the old plans are not
correctly configured.

From now on, the default region is `US`, a large area. Previously, the default value was `us-central-1`.
A change in the region forces the recreation of the bucket.
Therefore, if the old instance was created using a region other than `US`, you must add the region
property to the old plan, setting the value equal to the old instance region.

For example, if you created the old instance by using the private plan, without changing the region,
the plan must look like this:

```json
{
    "name": "private",
    "id": "bbc4853e-8a63-11ea-a54e-670ca63cee0b",
    "description": "Private Storage bucket",
    "region": "us-central1",
    "metadata": {
      "displayName": "Private"
    }
}
```

If you created the old instance by using the public plan, without changing the region, the plan
must look like this:

```json
{
    "name": "public-read",
    "id": "c07f21a6-8a63-11ea-bc1b-d38b123189cb",
    "description": "Public-read Storage bucket",
    "region": "us-central1",
    "metadata": {
      "displayName": "Public Read"
    }
}
```

The default storage class now is `MULTI_REGIONAL`, which enables high availability across a large area.
Previously, the default value was `STANDARD`. This storage class needs a large region like `US`.

If the old instance was created by using a region not accepted in the `MULTI_REGIONAL` configuration,
add the old instance storage class to match the parameters. If you don't, the upgrade process tries
to set the storage class `MULTI_REGIONAL` by using an invalid region and the process is blocked.
For more information, see the
[Google Cloud documentation](https://cloud.google.com/about/locations#multi-region).

For example, if you created the old instance by using the private plan, without changing the region,
the plan must look like this:

```json
{
    "name": "private",
    "id": "bbc4853e-8a63-11ea-a54e-670ca63cee0b",
    "description": "Private Storage bucket",
    "region": "us-central1",
    "storage_class": "STANDARD",
    "metadata": {
      "displayName": "Private"
    }
}
```

If you created the old instance by using the public plan, without changing the region, the plan
must look like this:

```json
{
    "name": "public-read",
    "id": "c07f21a6-8a63-11ea-bc1b-d38b123189cb",
    "description": "Public-read Storage bucket",
    "region": "us-central1",
    "storage_class": "STANDARD",
    "metadata": {
      "displayName": "Public Read"
    }
}
```

<p class="note caution">
  <strong>Caution:</strong> You cannot edit plan properties during a provision or update operation.
  The same considerations must be taken into account for the customized plans you created.
</p>

If you instead want to delete all previously created service instances, delete them before upgrading
<%= vars.product_short %> to this version.

To remove the instances from the broker and the IaaS, run:

```console
cf delete-service SERVICE-NAME
```

To remove instances from Cloud Foundry, but retain them in the IaaS, run:

```console
cf purge-service-instance
```

## <a id="procedure"></a> Upgrade procedure

To upgrade the <%= vars.product_short %> to a later version:

1. Download the new version of <%= vars.product_short %> from
   [<%= vars.product_network %>](https://network.pivotal.io/products/cloud-service-broker-gcp/).

2. Follow the procedure in [Installing with GCP](installing-with-gcp.html.md.erb).

3. Make all the changes described in this topic that are required for the new version.

4. If you are upgrading to a version later than v1.0, you might need to upgrade service instances.
   Before installing the new version, see
   [Upgrade All Service Instances Config](installing-with-gcp.html.md.erb#upgrade-all-config).
