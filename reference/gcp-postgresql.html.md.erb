---
title: Google PostgreSQL Reference
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the Google PostgreSQL service (csb-google-postgres).
It details the plans, configuration parameters, and binding credentials.

## <a id="plans"></a> Plans

A default plan becomes available when installing the tile.
This plan is for reference only, and is not intended for production use.
Remove this default plan and create plans that fit your requirements.

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for GCP](../installing-with-gcp.html.md.erb#services).

The following table lists parameters that can be configured at a plan level:

| Parameter name         | Values                                                                           | Default | Required |
|------------------------|----------------------------------------------------------------------------------|---------|----------|
| `name`                 | The plan name.                                                                    | _n/a_   | Yes      |
| `id`                   | A unique GUID.                                                                    | _n/a_   | Yes      |
| `description`          | Description of the new plan.                                                      | _n/a_   | Yes      |
| `display_name`         | Name to use when displaying the plan in the Marketplace.                                  | _n/a_   | No       |
| `free`                 | When false, service instances of this service plan have a cost.                   | true    | No       |
| `bindable`             | Specifies whether service instances of the service plan can bind to applications. | true    | No       |
| `plan_updateable`      | Specifies whether the plan supports upgrade/downgrade/sidegrade to another version.         | true    | No       |
| `metadata.displayName` | Name to use when displaying the plan in the Marketplace.                         | _n/a_   | No       |
| `metadata.bullets`     | List of bullet points to display in Apps Manager.                                | _n/a_   | No       |

You can also add any of the configuration parameters listed in the [parameters](#parameters) section
to your plan.

To create plans with specific sizes and versions, set the `tier`, `storage_gb`, and `postgres_version`
properties.

If you set a parameter at plan level, developers cannot change the value when creating or updating
service instances.

<p class="note warning">
  <strong>Caution:</strong> When editing a plan configuration, consider the implications for existing
  services.
  If you change a default value, this value is applied to existing service instances when they are
  updated.
  For example, if you change the <code>region</code>, then when a service instance is updated, an
  attempt is made to change the region. This is not a supported operation in GCP and might result in
  data loss.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```console
cf create-service csb-google-postgres PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-google-postgres` service. The Operation column displays
whether a parameter is supported for both provision and update, or for provision only:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tr>
    <td><code>tier</code></td>
    <td>string</td>
    <td>
    Required unless defined in plan. Google machine tier. This determines the CPU and RAM resource.
    It can be a legacy machine type, such as <code>db-f1-micro</code>, <code>db-g1-small</code>,
    <code>db-n1-standard-8</code>, <code>db-n1-highmem-16</code>, or a custom machine type such as
    <code>db-custom-8-8192</code>.  For more information about machine types, see the
    <a href="https://cloud.google.com/sql/docs/postgres/create-instance#machine-types">Google Cloud documentation</a>.
    </td>
    <td>None</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>postgres_version</code></td>
    <td>string</td>
    <td>
      Required unless defined in the plan. The version for the PostgreSQL instance.
      PostgreSQL 15 is not supported.
      <code>POSTGRES_11</code>, <code>POSTGRES_12</code>,
      <code>POSTGRES_13</code>, or <code>POSTGRES_14</code>.
    </td>
    <td><code>POSTGRES_13</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>storage_gb</code></td>
    <td>number</td>
    <td>
      Required unless defined in the plan. Size of storage volume for service instance. 10&ndash;4096&nbsp;GB.
    </td>
    <td><code>10</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>Name for the PostgreSQL instance.</td>
    <td><code>csb-postgres-INSTANCE-ID</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>Name for the database.</td>
    <td><code>csb-db</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>region</code></td>
    <td>string</td>
    <td>
      The region of the PostgreSQL instance.
    </td>
    <td>The value the operator entered for <strong>Region</strong> in <%= vars.ops_manager %>.</td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>require_ssl</code></td>
    <td>boolean</td>
    <td>
      Require TLS for the connection between PostgreSQL and the apps bound to the service.
    </td>
    <td><code>true</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>
      The name of the Google Compute Engine network to which the instance is connected. The <code>authorized_network_id</code> takes precedence if set.
    </td>
    <td><code>default</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>authorized_network_id</code></td>
    <td>string</td>
    <td>
      Self link of the Google Compute Engine network to which the instance is connected.
      It has the format <code>https://www.googleapis.com/compute/v1/projects/PROJECT-NAME/global/networks/VPC-NAME</code>.
    </td>
    <td>The value the operator entered for <strong>authorized_network_id</strong> in <%= vars.ops_manager %>. If that is empty then <code>authorized_network</code> is used.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>authorized_networks_cidrs</code></td>
    <td>array</td>
    <td>
      CIDR notation IPv4 or IPv6 addresses that are allowed to access this instance.
    </td>
    <td><code>[]</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>public_ip</code></td>
    <td>Boolean</td>
    <td>
      Assigns a static public IPv4 IP to the database.
      You must configure <code>authorized_networks_cidrs</code> on the selected network to enable access.
      For more information, see the <a href="https://cloud.google.com/sql/docs/postgres/configure-ip">Google Cloud documentation</a>.
    </td>
    <td><code>false</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_retain_number</code></td>
    <td>integer</td>
    <td>
      The number of backups to retain. Set this to zero to deactivate backups.
    </td>
    <td><code>7</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_location</code></td>
    <td>string</td>
    <td>
      The location where backups are stored.
    </td>
    <td><code>us</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_start_time</code></td>
    <td>string</td>
    <td>
      Start of the backup time window in UTC.
    </td>
    <td><code>07:00</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_point_in_time_log_retain_days</code></td>
    <td>integer</td>
    <td>
      The number of days to retain point in time logs. Set to zero to deactivate point in time logging.
      Before you set this property, you must first enable backups using the <code>backups_retain_number</code> property.
    </td>
    <td><code>7</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>credentials</code></td>
    <td>string</td>
    <td>
      The GCP credentials.
    </td>
    <td>The value the operator entered for <strong>Credentials</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>project</code></td>
    <td>string</td>
    <td>
      The GCP project to use.
    </td>
    <td>The value the operator entered for <strong>Project</strong> in <%= vars.ops_manager %>.</td>
    <td>provision</td>
  </tr>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```console
cf bind-service APP-NAME SERVICE-INSTANCE-NAME --binding-name BINDING-NAME
```

A binding or service key corresponds to a user in PostgreSQL.
By default, PostgreSQL users do not have have access to data written by other users.

For bindings to have access to the same data, the `public` schema can be used,
or a schema can be created and access can be granted to other users.

When a binding or service key is deleted, data that the PostgreSQL user owns is re-assigned to a role
called `binding_user_group` before the user is deleted. This ensures that other bindings still have
access to the data.

## <a id="binding-process"></a> Binding Process

For each new binding, the Google PostgreSQL service creates a new user with the role
`binding_user_group`.
When the binding is deleted, all the objects the user owns are re-assigned to the role
`binding_user_group`, and the user is deleted.

The client certificate exposed through the binding credentials is created during provisioning,
and is shared between all binding users. The client certificate is managed in this manner for the
following reasons:

- Each CloudSQL instance is limited to 10 certificates. For more information, see the
  [Google Cloud documentation](https://cloud.google.com/sql/docs/mysql/configure-ssl-instance#new-client).
- The lifetime of a client certificate is set to 10 years.
- The client certificate is used to authorize only the connection and never the user.

Currently, the Google PostgreSQL service does not provide a mechanism for TLS certificate rotation.

## <a id="binding-known-issue"></a> Binding Process Known Issue

When an app creates objects with one binding, depending on the permissions granted, other bindings
might not have permissions to see these objects.
This can cause errors in apps, and it can cause errors creating additional bindings. For example:

```console
Binding service instance csb-google-postgres-small to app my-app in org \
my-org / space my-space as my-user...
Job (dccc89be-b91f-11ed-a525-3b487b0bd45d) failed: bind could not be completed: \
Service broker error: error performing bind: error waiting for result: bind failed: Error: pq: \
permission denied for table flyway_schema_history with csbpg_binding_user.new_user, on main.tf line 15,\
in resource "csbpg_binding_user" "new_user": 15: resource "csbpg_binding_user" "new_user" { exit status 1
FAILED
```

If this occurs, it is possible to grant access to the object so that it can be accessed through other
bindings.

1. Look up the GUID of the service instance by running:

   ```console
   cf service SERVICE-NAME
   ```

   Where `SERVICE-NAME` is the name of the service

2. In the Google Cloud Console, locate the Google SQL instance by using the GUID you learned earlier.
3. Set a password for the `postgres` user.
4. Log in to the database by running the `psql` command as the `postgres` user with the password you set.
5. Grant access to the `binding_user_group` role: `grant binding_user_group to postgres;`
6. Grant public access to the object in question: `grant all on table public.flyway_schema_history to public;`
7. Repeat the previous step for all objects that subsequent bindings need access to.

After this, subsequent binding operations succeed and apps using these bindings can detect the objects.

### <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for Google PostgreSQL is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "require_ssl" : true,
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URL",
    "sslcert" : "SSL_CLIENT_CERT",
    "sslkey" : "SSL_CLIENT_CERT_KEY",
    "sslrootcert" : "SSL_ROOT_CERT"
}
```
