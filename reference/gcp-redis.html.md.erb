---
title: Google Redis Reference (Beta)
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the Google Redis service (csb-google-redis).
It details the plans, configuration parameters, and binding credentials.

<p class="note warning">
  <strong>Caution: </strong>
  The Google Redis service offering is currently in beta and is intended for evaluation and test purposes only.
  Do not use this product in a production environment.
</p>

<p class="note">
  <strong>Note:</strong> Release v1.2.0 removes brokerpak pre-configured plans for Google Redis.
  All plans must be configured through the tile.
  If you have instances of Google Redis that were created in previous versions and that you want to
  maintain, see <a href="#old-plans">Previously Provided Pre-configured Plans</a>.
  For more information about upgrade steps, see
  <a href="../upgrading.html.md.erb">Upgrading <%= vars.product_full %></a>.
</p>

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for GCP](../installing-with-gcp.html#services).

The following table lists parameters which can only be configured for additional plans:

| Parameter Name    | Values                                                                           | Default |
|-------------------|----------------------------------------------------------------------------------|---------|
| `name`*           | The plan name                                                                    | _n/a_   |
| `id`*             | A unique GUID                                                                    | _n/a_   |
| `description`*    | Description of the new plan                                                      | _n/a_   |
| `service_tier`*   | The service tier of the instance - BASIC or STANDARD_HA                          | _n/a_   |
| `free`            | When false, Service Instances of this Service Plan have a cost                   | true    |
| `bindable`        | Specifies whether Service Instances of the Service Plan can bind to applications | true    |
| `plan_updateable` | Whether the Plan supports upgrade/downgrade/sidegrade to another version         | true    |

<sup>*</sup> Required

You can also add any of the configuration parameters listed in the [parameters](#parameters) section to your plan.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot
  change the value when creating or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-google-redis PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-google-redis service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tr>
    <td><code>display_name</code></td>
    <td>string</td>
    <td>
      The display name of the Redis instance.
    </td>
    <td><code>INSTANCE-ID</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>memory_size_gb</code></td>
    <td>integer</td>
    <td>
      The size of the instance in gigabytes, 1&ndash;300.
    </td>
    <td><code>4</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>instance_id</code></td>
    <td>string</td>
    <td>
      Permanent identifier for your instance.
    </td>
    <td><code>csb-INSTANCE-ID</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>region</code></td>
    <td>string</td>
    <td>
      The region of the Redis instance.
    </td>
    <td><code>us-central1</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>
      The name of the Google Compute Engine network to which the instance is connected.
    </td>
    <td><code>default</code> </td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>authorized_network_id</code></td>
    <td>string</td>
    <td>
      The ID of the Google Compute Engine network to which the instance is connected.
    </td>
    <td><code>""</code> </td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>reserved_ip_range</code></td>
    <td>string</td>
    <td>
      The range of IP addresses reserved for this instance.
    </td>
    <td><code>""</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>credentials</code></td>
    <td>string</td>
    <td>
      The GCP credentials.
    </td>
    <td>The value the operator entered for <strong>Credentials</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>project</code></td>
    <td>string</td>
    <td>
      The GCP project to use.
    </td>
    <td>The value the operator entered for <strong>Project</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
</table>

## <a id="binding-creds"></a> Binding Credentials

You can bind a service by running:

```bash
cf bind-service APP-NAME SERVICE-INSTANCE --binding-name BINDING-NAME
```

The format for binding credentials for Google Redis is as follows:

```json
{
    "host" : "INSTANCE-HOST",
    "port" : "INSTANCE-PORT",
    "memory_size_gb" : "INSTANCE-SIZE-GB",
    "service_tier" : "SERVICE-TIER",
    "redis_version" : "REDIS-VERSION"
}
```

## <a id="old-plans"></a> Previously Provided Pre-configured Plans

The table below lists the previously provided plans for Google Redis:

| Plan  | Description                                                                         |
|-------|-------------------------------------------------------------------------------------|
| basic | A basic plan with no failover. Data will be lost on maintenance or cluster changes. |
| ha    | A highly available plan with automatic failover.                                    |

To keep these plans in this version of the broker, add them through the tile as custom plans.
For how to configure plans through the tile, see
[Configure Services with <%= vars.product_short %>](../installing-with-gcp.html#services).

Add the following block to keep the `basic` plan:

```json
{
    "name": "basic",
    "id": "6ed44104-8777-4b57-8c03-826b3af7d0be",
    "description": "Beta - A basic plan with no failover. Data will be lost on maintenance or cluster changes.",
    "service_tier": "BASIC",
    "metadata": {
        "displayName": "basic (Beta)",
        "bullets": [
            "uses defaults", "basic"
        ]
    }
}
```

Add the following block to keep the `ha` plan:

```json
{
    "name": "ha",
    "id": "8c85c90c-f8e3-4337-9069-c03036243894",
    "description": "Beta - A highly available plan with automatic failover.",
    "service_tier": "STANDARD_HA",
    "metadata": {
        "displayName": "High Availability (Beta)",
        "bullets": [
            "uses defaults", "high availability"
        ]
    }
}
```
