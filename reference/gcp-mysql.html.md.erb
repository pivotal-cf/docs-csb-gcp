---
title: Google MySQL Reference
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the Google MySQL service (csb-google-mysql).
It details the plans, configuration parameters, and binding credentials.

<p class="note">
  <strong>Note:</strong> Release v1.2.0 removes brokerpak pre-configured plans for MySQL.
  All plans must be configured through the tile. For how to do so, see
  <a href="../installing-with-gcp.html.md.erb#services">Configure Services with <%= vars.product_short %></a>.
  For more information about upgrade steps, see
  <a href="../upgrading.html">Upgrading <%= vars.product_full %></a>.
</p>

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for GCP](../installing-with-gcp.html.md.erb#services).

The following table lists parameters which can only be configured for additional plans:

| Parameter Name         | Values                                                                           | Default | Required |
|------------------------|----------------------------------------------------------------------------------|---------|----------|
| `name`                 | The plan name.                                                                    | _n/a_   | Yes      |
| `id`                   | A unique GUID.                                                                    | _n/a_   | Yes      |
| `description`          | Description of the new plan.                                                      | _n/a_   | Yes      |
| `free`                 | When false, Service Instances of this Service Plan have a cost.                   | true    | No       |
| `bindable`             | Specifies whether Service Instances of the Service Plan can bind to applications | true    | No       |
| `plan_updateable`      | Whether the Plan supports upgrade/downgrade/sidegrade to another version.         | true    | No       |
| `metadata.displayName` | Name to use when displaying the plan in the Marketplace.                         | _n/a_   | No       |
| `metadata.bullets`     | List of bullet points to display in Apps Manager.                                | _n/a_   | No       |

You can also add any of the configuration parameters listed in the [parameters](#parameters) section to your plan.

To create plans with specific sizes and versions, set the `tier`, `storage_gb`, and `mysql_version`
properties.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot
  change the value when creating or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-google-mysql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-google-mysql service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tr>
    <td><code>tier</code></td>
    <td>string</td>
    <td>
      Required unless defined in plan. This is the GCP database machine type.
      For more information, see the
      <a href="https://cloud.google.com/sql/docs/mysql/instance-settings">Google Cloud documentation</a>.
    </td>
    <td>None</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>deletion_protection</code></td>
    <td>boolean</td>
    <td>
      Sets whether deletion protection is enabled. The database cannot be deleted when this value is set.
    </td>
    <td><code>false</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>disk_autoresize</code></td>
    <td>boolean</td>
    <td>
      Enables auto-resizing of the storage size.
      When deactivating the storage auto-resizing, set value of the <code>disk_autoresize_limit</code>
      to 0.
    </td>
    <td><code>true</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>disk_autoresize_limit</code></td>
    <td>number</td>
    <td>
      The maximum size in GB to which storage capacity can be automatically increased.
      The default value is 0, which specifies that there is no limit.
    </td>
    <td><code>0</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>mysql_version</code></td>
    <td>string</td>
    <td>
      Required unless defined in plan. This is the version for the MySQL instance, and it can be any
      version that the provider supports. Note that enforcing secure connections is only supported with MySQL v5.7
      and later. If you are using MySQL v5.6, you must also set the <code>allow_insecure_connections</code> property.
    </td>
    <td>None</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>storage_gb</code></td>
    <td>number</td>
    <td>
      Required unless defined in plan. Size of storage volume for service instance.
      To understand the limits, see the
      <a href="https://cloud.google.com/sql/docs/mysql/quotas#storage_limits">Google Cloud documentation</a>.
    </td>
    <td><code>10</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>Name for the mysql instance.</td>
    <td><code>csb-mysql-INSTANCE-ID</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>Name for the database.</td>
    <td><code>csb-db</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>region</code></td>
    <td>string</td>
    <td>
      The region of the MySQL instance.
    </td>
    <td>The value the operator entered for <strong>Region</strong> in <%= vars.ops_manager %>.</td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>authorized_network_id</code></td>
    <td>string</td>
    <td>
      Self link of the Google Compute Engine network to which the instance is connected.
      It has the format <code>https://www.googleapis.com/compute/v1/projects/PROJECT-NAME/global/networks/VPC-NAME</code>.
    </td>
    <td>
      The value the operator entered for <strong>Authorized Network ID</strong> in <%= vars.ops_manager %>.
      If this is empty then the default network of the region is used.
    </td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>authorized_networks_cidrs</code></td>
    <td>array</td>
    <td>
      CIDR notation IPv4 or IPv6 addresses that are allowed to access this instance.
    </td>
    <td><code>[]</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>public_ip</code></td>
    <td>Boolean</td>
    <td>
      Assigns a static public IPv4 IP to the database.
      You must configure <code>authorized_networks_cidrs</code> on the selected network to enable access.
      For more information, see the <a href="https://cloud.google.com/sql/docs/mysql/configure-ip">Google Cloud documentation</a>.
    </td>
    <td><code>false</code> </td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>credentials</code></td>
    <td>string</td>
    <td>
      The GCP credentials.
    </td>
    <td>The value the operator entered for <strong>Credentials</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_retain_number</code></td>
    <td>number</td>
    <td>
      The number of backups to retain. Setting this value to 0 deactivates the backups.
    </td>
    <td><code>7</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_location</code></td>
    <td>string</td>
    <td>
      The name of the GCP region in which to store the backup.
    </td>
    <td><code>null</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_start_time</code></td>
    <td>string</td>
    <td>
      Time in HH:MM format that indicates when the backup starts.
    </td>
    <td><code>07:00</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>backups_transaction_log_retention_days</code></td>
    <td>number</td>
    <td>
      The number of days to retain the transaction logs. Setting this value to <code>0</code>
      deactivates transaction log backups.<br><br>
      The transaction logs can be retained up to seven days.
      When transaction logs are activated, regular backups are forced
      to be enabled, even if <code>backups_retain_number</code> is set to <code>0</code>.
    </td>
    <td><code>0</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>highly_available</code></td>
    <td>boolean</td>
    <td>
      Enable regional high availability for the service instance.<br><br>
      This deploys a hot standby instance to a different zone in the same region, and affects the billing accordingly.
      Enabling this setting requires transaction log backups to be enabled.<br><br>
      For more information, see the
      <a href="https://cloud.google.com/sql/docs/mysql/high-availability">Google Cloud Documentation</a>.
    </td>
    <td><code>false</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>location_preference_zone</code></td>
    <td>string</td>
    <td>
      Preferred zone in the instance region for the primary instance in a highly available setup.
      For example, <code>a</code> or <code>c</code>.<br><br>
      When not specified, one of the available zones is chosen automatically.
      For a list of available zones, see the
      <a href="https://cloud.google.com/compute/docs/regions-zones#available">Google Cloud Documentation</a>.
    </td>
    <td><code>""</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>location_preference_secondary_zone</code></td>
    <td>string</td>
    <td>
      Preferred zone in the instance region for the standby instance in a highly available setup.
      For example, <code>b</code> or <code>f</code>.<br><br>
      In a highly available configuration, when the secondary zone is not specified,
      a zone different from the one specified for the primary instance is chosen automatically.<br><br>
      For a list of available zones, see the
      <a href="https://cloud.google.com/compute/docs/regions-zones#available">Google Cloud Documentation</a>.
    </td>
    <td><code>""</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>allow_insecure_connections</code></td>
    <td>boolean</td>
    <td>
      Specifies whether insecure connections are allowed for this service instance.
      Note that enforcing secure connections is not supported by MySQL v5.6.
      If you are using MySQL v5.6, you must set this property to <code>true</code>.
    </td>
    <td><code>false</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>project</code></td>
    <td>string</td>
    <td>
      The GCP project to use.
    </td>
    <td>The value the operator entered for <strong>Project</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
</table>

## <a id="tls-connections"></a> TLS Connections

By default, all new service instances do not allow insecure connections.
To establish a secure connection, the application must extract the CA certificate from
the binding, because CloudSQL generates a separate CA certificate for every service instance.
For more information about certificate generation, see the
[Google Cloud documentation](https://cloud.google.com/sql/docs/mysql/authorize-ssl#ssltls_certificates).

> **Important** Because a CloudSQL server certificate does not contain the server name, or its
> IP address in any form, the server certificate verification must be limited to CA verification only.
> For more information, see the
> [Google Cloud documentation](https://cloud.google.com/sql/docs/mysql/connect-admin-ip#connect-ssl).

You can establish a mutual TLS connection to the server by using the contents of the `sslcert` and
`sslkey` binding properties. However, mutual TLS is not enforced.
For more information, see the
[Google Cloud documentation](https://cloud.google.com/sql/docs/mysql/authorize-ssl#overview).

To avoid the TLS requirement, set the `allow_insecure_connections` parameter to `true`
during service instance creation.

<p class="note important">
  <strong>Important:</strong> You cannot change the value for the `allow_insecure_connections` parameter after creating the instance.
</p>

### <a id="tls-connections-java"></a> Java applications

Java applications typically require that the certificates used by the application are loaded into a
trust store (for CA certificates) or a key store (for client certificates) in a well-known location.

Typically, CA certificates are shared either globally or within an organization.
In most scenarios, any extra certificates can be installed in Ops Manager so that the Java buildpack
can pick them up to be integrated with the app.
However, this is not possible with CloudSQL. Instead, the application itself must handle certificates
at load time, and you can achieve this by deploying a pre-runtime script with the application.
For more information, see the
[Cloud Foundry documentation](https://docs.cloudfoundry.org/devguide/deploy-apps/deploy-app.html#profile).

The script extracts the certificates from the environment variables and loads them into the appropriate
stores. You can use the pre-run script in the
[JDBC test app](https://github.com/cloudfoundry/jdbctestapp/blob/v1.0.0/cf/.profile) on GitHub as an
example and adapt it to the required deployment context.

## <a id="binding-process"></a> Binding Process

For each new binding, the Google MySQL service creates new user credentials with full access rights
to the service instance database, so that all the data remains accessible.
However, the client certificate exposed through the binding credentials is created during provisioning,
and is shared between all binding users. The client certificate is managed in this manner for the
following reasons:

- Each CloudSQL instance is limited to 10 certificates. For more information, see the
  [Google Cloud documentation](https://cloud.google.com/sql/docs/mysql/configure-ssl-instance#new-client).
- The lifetime of a client certificate is set to 10 years
- The client certificate is used to authorize only the connection and never the user

Currently, the Google MySQL service does not provide a mechanism for TLS certificate rotation.

## <a id="binding-creds"></a> Binding Credentials

You can bind a service by running:

```bash
cf bind-service APP-NAME SERVICE-INSTANCE --binding-name BINDING-NAME
```

The format for binding credentials for Google MySQL is as follows:

```json
{
  "name": "DATABASE-NAME",
  "hostname": "DATABASE-SERVER-HOST",
  "port": "DATABASE-SERVER-PORT",
  "username": "AUTHENTICATION-USERNAME",
  "password": "AUTHENTICATION-PASSWORD",
  "uri": "DATABASE-CONNECTION-URI",
  "jdbcUrl": "JDBC-FORMAT-CONNECTION-URL",
  "sslcert": "SSL-CLIENT-CERT",
  "sslkey": "SSL-CLIENT-CERT-KEY",
  "sslrootcert": "SSL-INSTANCE-CA-CERT"
}
```
